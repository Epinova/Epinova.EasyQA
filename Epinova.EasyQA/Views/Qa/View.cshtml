@model Epinova.EasyQA.Core.Entities.QaInstance

@{
    ViewBag.Title = Model.Name;
    ViewBag.MarkdownEngine = new Markdown(new MarkdownOptions() { AutoHyperlink = true,AutoNewlines=true, LinkEmails = true, EmptyElementSuffix = ">" });
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 id="title">@Model.Name</h1> 
<dl>
    <dt>@Epinova.EasyQA.App_GlobalResources.Home.DoneBy:</dt>
        <dd>@Model.User</dd>

    <dt>@Epinova.EasyQA.App_GlobalResources.Qa.ProjectMembers:</dt>
        <dd>
          @foreach (string member in Model.ProjectMembers)
          {
              @(member+", ")
          }
        </dd>

    <dt>@Epinova.EasyQA.App_GlobalResources.Qa.PresentAtReview</dt>
        <dd>@Model.PresentAtReview</dd>
</dl>
<input type="hidden" value="@Model.Id" id="qaId">
@{var categoryIndexer = 1; }
@{int criteriaIndexer; }
@foreach (QaInstanceCategory category in Model.Categories)
{
    criteriaIndexer = 1;
<section>
    <h1>@categoryIndexer. @category.Text</h1>
    <ul class="viewQaInstanceList">
        @foreach (QaInstanceCriteria criteria in category.Criterias)
        { 
        <li>
            <input type="hidden" value="@criteria.Id" class="criteriaInstanceId">
            @if (criteria.Status == InstanceCriteriaStatus.NeedsExplanation)
            { 
                <span class="status statusQ">NeedsExplanation</span>
            }
            else if (criteria.Status == InstanceCriteriaStatus.NotOk) { 
                <span class="status statusN">NotOk</span>
                if (ViewBag.CanMarkAsFixed) { 
                    @:<input type="radio" name="resolvedas@(criteriaIndexer)" @(criteria.ResolvedAs == ResolvedType.Fixed  ? "checked" : string.Empty) value="f" class="radioFixed statusChooser">
                    @: <input type="radio" name="resolvedas@(criteriaIndexer)" @(criteria.ResolvedAs == ResolvedType.WontFix ? "checked" : string.Empty) value="wf" class="radioWontfix statusChooser"/>
                }
            }
            else if (criteria.Status == InstanceCriteriaStatus.Ok) { 
                <span class="status statusY">Ok</span>
            }
            else if (criteria.Status == InstanceCriteriaStatus.NotApplicable) {
                <span class="status statusNa">Not relevant</span>
            }  

            @if (!ViewBag.CanMarkAsFixed && criteria.Status == InstanceCriteriaStatus.NotOk && criteria.ResolvedAs == ResolvedType.Fixed) {
                <span class="status statusF" title="Fixed">Fixed</span>
            }
            else if (!ViewBag.CanMarkAsFixed && criteria.Status == InstanceCriteriaStatus.NotOk && criteria.ResolvedAs == ResolvedType.WontFix) {
                <span class="status statusWF" title="Won't fix">Won't fix</span>
            }
            <span class="number">@criteriaIndexer.</span> <span class="content">@criteria.Text</span>
            <div class="commentArea">
                @Html.Raw(ViewBag.MarkdownEngine.Transform(HttpUtility.HtmlEncode(criteria.Comment)))
            </div>
        </li>    
            criteriaIndexer++;
        }        
    </ul>
</section>
    categoryIndexer++;
}

<section>
    <h1>@Epinova.EasyQA.App_GlobalResources.Qa.Miscellaneous</h1>
    @Html.Raw(ViewBag.MarkdownEngine.Transform(HttpUtility.HtmlEncode(Model.Miscellaneous)))
</section>
<section>
    <h1>@Epinova.EasyQA.App_GlobalResources.Qa.Summary</h1>
    @Html.Raw(ViewBag.MarkdownEngine.Transform(HttpUtility.HtmlEncode(Model.Summary)))
</section>

@section AddScripts {
    <script src="/Scripts/jquery.uniform.min.js"></script>
    <script src="/Scripts/editQaInstance.js"></script>
}